<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Mac下的软件推荐</title>
    <url>/2019/12/30/Mac%E4%B8%8B%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h1><p>由于系统崩溃，花了两天重新安装Mac系统。<br>重新装完系统之后还需要安装软件，这里顺便推荐几个比较好用的软件。  </p>
<a id="more"></a>
<h1 id="2-软件推荐"><a href="#2-软件推荐" class="headerlink" title="2. 软件推荐"></a>2. 软件推荐</h1><h2 id="1-系统增强方面"><a href="#1-系统增强方面" class="headerlink" title="(1) 系统增强方面"></a>(1) 系统增强方面</h2><ul>
<li>The Unarchiver</li>
<li>Moom</li>
<li>CleanMyMac 3</li>
<li>Paragon NTFS for Mac 15</li>
<li>Scroll Reverser</li>
<li>Pap.er</li>
<li>Bartender 3</li>
<li>Gestimer</li>
<li>HyperSwitch</li>
<li>CheatSheet</li>
</ul>
<h2 id="2-效率增强方面"><a href="#2-效率增强方面" class="headerlink" title="(2) 效率增强方面"></a>(2) 效率增强方面</h2><ul>
<li>Chrome</li>
<li>Safari</li>
<li>有道云笔记（印象笔记）</li>
<li>快译</li>
<li>Sublime</li>
<li>Mweb</li>
<li>Xcode</li>
<li>PDF Expert</li>
<li>Mindnode</li>
<li>office组件</li>
</ul>
<h2 id="3-日常与娱乐所需"><a href="#3-日常与娱乐所需" class="headerlink" title="(3) 日常与娱乐所需"></a>(3) 日常与娱乐所需</h2><ul>
<li>QQ</li>
<li>Wechat</li>
<li>Steam</li>
<li>网易云音乐（qq音乐）</li>
<li>IINA</li>
</ul>
<h1 id="3-Dock美化"><a href="#3-Dock美化" class="headerlink" title="3. Dock美化"></a>3. Dock美化</h1><p>在安装完软件后，还需要在LaunchPad和Docker中将其整理归类。<br>在这一步，有一个非常好用的小技巧：每输入一次以下代码，即可在Docker中添加一个间隔。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">defaults write com.apple.dock persistent-apps -array-add &#39;&#123;&quot;tile-type&quot;&#x3D;&quot;spacer-tile&quot;;&#125;&#39;; killall Dock</span><br></pre></td></tr></table></figure><br>如此一来既可<br>以通过调整间隔位置，在Docker中在视觉上将软件进行分类了，强迫症表示一本满足。<br>效果如下所示<br><img src="\images\pasted-9.png" alt="upload successful"></p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Excel中文乱码的解决方法</title>
    <url>/2019/12/30/Excel%E6%89%93%E5%BC%80UTF-8%E7%BC%96%E7%A0%81CSV%E6%96%87%E4%BB%B6%E7%9A%84%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="1-乱码原因"><a href="#1-乱码原因" class="headerlink" title="1. 乱码原因"></a>1. 乱码原因</h1><p>Excel通过bom识别CSV文件编码。bom是微软自己定义的一种文件头部协定，存储在文件头部，存储内容就<br>是标识文件编码的信息。<br>很多CSV文件并非由微软软件生成，头部并没有bom，此时Excel默认按照unicode编码识别文件。若CSV文件<br>的编码方式为UTF-8，则会出现中文乱码。  </p>
<a id="more"></a>
<h1 id="2-解决方法一：文件头部加入bom"><a href="#2-解决方法一：文件头部加入bom" class="headerlink" title="2. 解决方法一：文件头部加入bom"></a>2. 解决方法一：文件头部加入bom</h1><p>可通过NotePad++等文本编辑器，将CSV文件另存为有bom头部的形式。<br>此时再用Excel读取，即可解决UTF-8编码下的中文乱码问题。  </p>
<h1 id="3-解决方法一：从excel导入文件"><a href="#3-解决方法一：从excel导入文件" class="headerlink" title="3. 解决方法一：从excel导入文件"></a>3. 解决方法一：从excel导入文件</h1><p>先打开Excel。随后执行“数据 -&gt; 自文本 -&gt; 分隔符号选择逗号 -&gt; 完成导入”。<br>以这种方式，同样可解决中文乱码问题。</p>
]]></content>
  </entry>
  <entry>
    <title>conda配置多python环境</title>
    <url>/2019/12/30/conda%E9%85%8D%E7%BD%AE%E5%A4%9Apython%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h1><p>在Windows/Mac中，可以很方便地通过<span class="exturl" data-url="aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tLw==" title="https://www.anaconda.com/">Anaconda<i class="fa fa-external-link"></i></span>构建多个Python和R环境，相互之间互不干扰，实现不同工作环境的隔离。<br>然而，在服务器端，往往无图形化界面。那么如何通过命令行构建多python环境就成了问题。<br>下面介绍如何在命令行环境中，通过conda配置多python环境。</p>
<a id="more"></a>
<h2 id="2-conda安装"><a href="#2-conda安装" class="headerlink" title="2. conda安装"></a>2. conda安装</h2><p>在官网找到<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmNvbmRhLmlvL2VuL2xhdGVzdC9taW5pY29uZGEuaHRtbA==" title="https://docs.conda.io/en/latest/miniconda.html">conda下载链接<i class="fa fa-external-link"></i></span>，下载需要版本的.sh文件，并进行安装。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget -bc &lt;conda link&gt;</span><br><span class="line">bash &lt;conda .sh file name&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="3-环境配置"><a href="#3-环境配置" class="headerlink" title="3. 环境配置"></a>3. 环境配置</h2><p>创建新环境<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda create --name py27 python&#x3D;2.7</span><br></pre></td></tr></table></figure><br>激活环境<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source activate py27 # Linux and OS X</span><br><span class="line">activate py27        # Windows</span><br></pre></td></tr></table></figure><br>查看所有环境<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda info --envs</span><br></pre></td></tr></table></figure><br>返回默认环境<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source deactivate python27</span><br></pre></td></tr></table></figure><br>删除环境<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda remove --name py27 --all</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>配置</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title> win7旗舰版与CentOS7双系统安装</title>
    <url>/2019/12/30/win7%E6%97%97%E8%88%B0%E7%89%88%E4%B8%8ECentOS7%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="1-安装顺序"><a href="#1-安装顺序" class="headerlink" title="1. 安装顺序"></a>1. 安装顺序</h1><p>两个系统安装时都会安装开机启动项，为了使得二者不会相互覆盖，正确的安装顺序是<br>1.磁盘分区<br>2.选择一个磁盘安装Win7<br>3.选择另一个磁盘安装CenOS7  </p>
<a id="more"></a>
<h1 id="2-启动项修复"><a href="#2-启动项修复" class="headerlink" title="2. 启动项修复"></a>2. 启动项修复</h1><p>若是安装后，出现了启动项覆盖，则需要在CentOS系统下加载Win的启动项，建议使用EasyBCD工具。  </p>
<h1 id="3-踩坑记录"><a href="#3-踩坑记录" class="headerlink" title="3. 踩坑记录"></a>3. 踩坑记录</h1><h2 id="1-启动过程报错"><a href="#1-启动过程报错" class="headerlink" title="(1) 启动过程报错"></a>(1) 启动过程报错</h2><p>报错如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dracut-initqueue[624]:Warning: Could not boot.</span><br><span class="line">dracut-initqueue[624]:Warning: &#x2F;dev&#x2F;root does not exist.</span><br><span class="line">Starting Dracut EmergencyShell…</span><br><span class="line">Warning: &#x2F;dev&#x2F;root does not exist</span><br></pre></td></tr></table></figure><br>错误原因：UltroISO在Window下写入U盘的安装文件路径，没有被linux安装程序识别<br>解决方法如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hd:LABEL&#x3D;CentOS\x207\x20x86_64 rd.live.check quiet 改为hd:&#x2F;dev&#x2F;sdb4 quiet</span><br><span class="line">注意：这里需要进入&#x2F;dev下ls查看硬件名称，可能不是sdb4而是其他</span><br></pre></td></tr></table></figure></p>
<h2 id="2-分区过程过程中报错"><a href="#2-分区过程过程中报错" class="headerlink" title="(2) 分区过程过程中报错"></a>(2) 分区过程过程中报错</h2><p>报错如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">No valid bootloader target device found. </span><br><span class="line">For UEFI installation , you must include an EFI System Partition on a </span><br><span class="line">GPT-formatted disk, mounted at &#x2F;boot&#x2F;efi.</span><br></pre></td></tr></table></figure><br>错误原因：使用UEFI时必须使用GPT分区格式，且需要挂载/boot/efi<br>解决方法如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在启动时按F2，在boot中将UEFI设置为disable，则默认使用BOIS启动</span><br></pre></td></tr></table></figure></p>
<h2 id="3-Win启动消失"><a href="#3-Win启动消失" class="headerlink" title="(3) Win启动消失"></a>(3) Win启动消失</h2><p>情况描述：CentOS7安装成功后，重启电脑，只看到CentOS7的选项，没有选择进入windos7系统的选项<br>错误原因：CentOS7使用新的grub2系统，原windos下的grub项目失效，所以需要进入/boot/grub2目录后使用vi编辑grub.cfg文件。<br>解决方法:修改Centos 7的Grub2引导，添加Windows的启动项<br>a. 运行命令<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vi &#x2F;boot&#x2F;grub2&#x2F;grub.cfg</span><br></pre></td></tr></table></figure></p>
<p>b. 找到语句<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BEGIN &#x2F;etc&#x2F;grub.d&#x2F;30_os-prober</span><br></pre></td></tr></table></figure></p>
<p>c. 后面加入win启动项</p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac下的软件破解方法</title>
    <url>/2019/12/30/Mac%E4%B8%8B%E4%BD%BF%E7%94%A8%E7%A0%B4%E8%A7%A3%E8%BD%AF%E4%BB%B6%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h1><p>Mac下软件丰富而强大，但部分软件价格过于昂贵，对于学生党十分不友好。<br>此处提供几个破解软件下载网站，以及软件破解方法。<br>有条件还是建议支持正版，也鼓励先试用后补票。<br><a id="more"></a></p>
<h1 id="2-破解软件下载网站"><a href="#2-破解软件下载网站" class="headerlink" title="2. 破解软件下载网站"></a>2. 破解软件下载网站</h1><p><span class="exturl" data-url="aHR0cDovL3hjbGllbnQuaW5mby8/Xz04ZjBkYThlYzYzZDY4YTBlMzYxZjhjMzM2YjNkZGIyNw==" title="http://xclient.info/?_=8f0da8ec63d68a0e361f8c336b3ddb27">xclient<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cuZmVuZy5jb20v" title="https://www.feng.com/">威锋<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cubWFjYmwuY29tLw==" title="https://www.macbl.com/">马可波罗<i class="fa fa-external-link"></i></span>  </p>
<h1 id="3-Mac软件破解方法"><a href="#3-Mac软件破解方法" class="headerlink" title="3. Mac软件破解方法"></a>3. Mac软件破解方法</h1><p>很多时候，破解软件下载下来，Mac却提示文件破损。<br>这其实是一种错误信息，真实原因是Mac开启了内核保护，不允许安装Appstore之外的第三方软件。<br>此时，只需暂时关闭内核保护，安装完破解软件后重新开启，即可成功破解。  </p>
<h2 id="1-关闭内核保护"><a href="#1-关闭内核保护" class="headerlink" title="(1) 关闭内核保护"></a>(1) 关闭内核保护</h2><p>在terminal中输入以下命令<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure></p>
<h2 id="2-调整安全选择设置"><a href="#2-调整安全选择设置" class="headerlink" title="(2) 调整安全选择设置"></a>(2) 调整安全选择设置</h2><p>Perferance -&gt; 安全性与隐私 -&gt; anywhere</p>
<h2 id="3-安装软件"><a href="#3-安装软件" class="headerlink" title="(3) 安装软件"></a>(3) 安装软件</h2><p>安装之后，重新开启内核保护之前，需打开软件一次。</p>
<h2 id="4-重新开启内核保护"><a href="#4-重新开启内核保护" class="headerlink" title="(4)重新开启内核保护"></a>(4)重新开启内核保护</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo spctl --master-enable</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac批量创建文件夹的方法</title>
    <url>/2019/12/30/Mac%E6%89%B9%E9%87%8F%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="批量创建文件夹"><a href="#批量创建文件夹" class="headerlink" title="批量创建文件夹"></a>批量创建文件夹</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir Lecture&#123;01..09&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Chrome上的拓展及脚本安装</title>
    <url>/2019/12/30/Chrome%E4%B8%8A%E7%9A%84%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h1><p>我们知道，Chrome本身提供了多种拓展，大大增强了Chrome浏览器的功能丰富性。<br>但除此之外，其实我们还可以在Chrome浏览器上安装脚本，进一步增强其易用性。<br>此处就简单介绍几种个人常用的Chrome拓展和脚本，供大家参考。  </p>
<a id="more"></a>
<h1 id="2-Chrome拓展"><a href="#2-Chrome拓展" class="headerlink" title="2. Chrome拓展"></a>2. Chrome拓展</h1><h2 id="1-AdBlock-—-最佳广告拦截工具"><a href="#1-AdBlock-—-最佳广告拦截工具" class="headerlink" title="(1) AdBlock — 最佳广告拦截工具"></a>(1) AdBlock — 最佳广告拦截工具</h2><p>AdBlock是Chrome上最受欢迎的拓展之一，其功能便是拦截烦人的广告，并且免费，非常良心。</p>
<h2 id="2-LastPass"><a href="#2-LastPass" class="headerlink" title="(2) LastPass"></a>(2) LastPass</h2><p>LastPass是著名的密码管理工具，用它而不用Chrome自带的密码管理，是看重了其跨平台的能力。<br>LastPass免费版能够支持两台设备，跨越多个应用和浏览器使用，非常方便。 </p>
<h2 id="3-捕捉网页截图"><a href="#3-捕捉网页截图" class="headerlink" title="(3) 捕捉网页截图"></a>(3) 捕捉网页截图</h2><p>捕捉网页截图用于在页面上进行截图，最重要的是其支持长截图，即让页面滚动进行长距离截图，非常有用。</p>
<h2 id="4-Video-Downloader-Plus"><a href="#4-Video-Downloader-Plus" class="headerlink" title="(4) Video Downloader Plus"></a>(4) Video Downloader Plus</h2><p>Video Downloader Plus能够让你下载页面中的视频。<br>其实IDM(Internet Download Manager)功能更加强大，是Windows平台下的最强下载软件，并且提供Chrome插件。然而需要付费。<br>Video Downloader Plus为免费插件，并且基础功能也勉强够用。具体可酌情选择。 </p>
<h2 id="5-Grammar-and-Spelling-checker-by-Ginger"><a href="#5-Grammar-and-Spelling-checker-by-Ginger" class="headerlink" title="(5) Grammar and Spelling checker by Ginger"></a>(5) Grammar and Spelling checker by Ginger</h2><p>Ginger能够自动实现英文拼写和语法纠错，英语读写苦手必备。  </p>
<h2 id="6-Kopernio"><a href="#6-Kopernio" class="headerlink" title="(6) Kopernio"></a>(6) Kopernio</h2><p>Kopernio是一个文献全文数据库，能够让用户绕开文献数据库(如web of science)的封锁，下载文献全文，科研党必备。</p>
<h2 id="7-Momentum"><a href="#7-Momentum" class="headerlink" title="(7)Momentum"></a>(7)Momentum</h2><p>Momentum是一个Chrome美化插件，主要用于美化Chrome的tab页面。<br>原始的Chrome tab页面会列出谷歌搜索和常用网页。<br>Momentum则会每天更新一张风景图，一则英文谚语，并且支持更多的功能定制，其效果如下所示。  </p>
<p><img src="\images\pasted-8.png" alt="upload successful"></p>
<h2 id="8-阅读模式"><a href="#8-阅读模式" class="headerlink" title="(8) 阅读模式"></a>(8) 阅读模式</h2><p>阅读模式是仿照<code>Safari浏览器阅读模式</code>的一个插件，作用在于去除页面中的杂乱信息，提供一个清晰干净的阅读页面。</p>
<h2 id="9-专注看图"><a href="#9-专注看图" class="headerlink" title="(9) 专注看图"></a>(9) 专注看图</h2><p>与阅读模式类似，专注看图也是一款阅读体验优化的软件。<br>只不过阅读模式侧重文字的提取和体验优化。专注看图则是专注于网页中图片的提取，适合看图党。  </p>
<h1 id="2-Chrome脚本"><a href="#2-Chrome脚本" class="headerlink" title="2. Chrome脚本"></a>2. Chrome脚本</h1><p>脚本比插件更强大，因为其更加自由，支持更多的自定义。<br>要安装脚本，首先需要安装脚本的管理器，即油猴(Tamperonkey)插件。<br>在Chrome线上应用程序商店中，安装完Tamperonkey，即可安装插件了。<br><span class="exturl" data-url="aHR0cHM6Ly93d3cudGFtcGVybW9ua2V5Lm5ldC9zY3JpcHRzLnBocA==" title="https://www.tampermonkey.net/scripts.php">Tamperonkey主页<i class="fa fa-external-link"></i></span>列出来几个脚本来源网站，都支持脚本的一键安装，非常方便。并且Tamperonkey还支持插件的管理以及云同步，便于跨机器使用。<br>这里推荐几个个人常用的脚本，抛砖引玉。 </p>
<h2 id="1-Youtube系列"><a href="#1-Youtube系列" class="headerlink" title="(1) Youtube系列"></a>(1) Youtube系列</h2><h3 id="Youtube"><a href="#Youtube" class="headerlink" title="Youtube+"></a>Youtube+</h3><p>youtube播放效果增强，功能十分强大，广受好评。<br>不过只支持旧版布局的Youtube，所以往往需要和<code>Youtube - Restore Classic</code>搭配使用。</p>
<h3 id="Youtube-Restore-Classic"><a href="#Youtube-Restore-Classic" class="headerlink" title="Youtube - Restore Classic"></a>Youtube - Restore Classic</h3><p>如其标题中表达的一样，此脚本的作用是自动将youtube布局修改为旧版(经典模式)。<br>适合需要使用<code>Youtube+</code>或者喜欢经典布局的用户使用。  </p>
<h3 id="Youtube-Best-Video-Downloader-2"><a href="#Youtube-Best-Video-Downloader-2" class="headerlink" title="Youtube Best Video Downloader 2"></a>Youtube Best Video Downloader 2</h3><p>用于youtube视频下载，不能与Youtube+一起使用。</p>
<h3 id="EasyVideoDownload"><a href="#EasyVideoDownload" class="headerlink" title="EasyVideoDownload"></a>EasyVideoDownload</h3><p>同样用于youtube视频下载，可与Youtube+兼容。</p>
<h2 id="2-bilibili系列"><a href="#2-bilibili系列" class="headerlink" title="(2) bilibili系列"></a>(2) bilibili系列</h2><h3 id="bilibili-merged-flv-mp4-ass-enhance"><a href="#bilibili-merged-flv-mp4-ass-enhance" class="headerlink" title="bilibili merged flv+mp4+ass+enhance"></a>bilibili merged flv+mp4+ass+enhance</h3><p>bilibili播放效果增强，并且支持视频下载</p>
<h3 id="解除B站区域限制"><a href="#解除B站区域限制" class="headerlink" title="解除B站区域限制"></a>解除B站区域限制</h3><p>bilibili某些番剧，限定了只支持某些地区能够观看。<br>此脚本可以解除区域限制，让用户自由观看所有番剧。  </p>
<h2 id="3-百度系列"><a href="#3-百度系列" class="headerlink" title="(3)百度系列"></a>(3)百度系列</h2><h3 id="百度网盘直接下载助手"><a href="#百度网盘直接下载助手" class="headerlink" title="百度网盘直接下载助手"></a>百度网盘直接下载助手</h3><p>破解百度网盘下载链接，从而可以使用其他下载工具对文件进行下载，跳过百度网盘的限速。</p>
<h3 id="百度文库文字复制及原格式下载"><a href="#百度文库文字复制及原格式下载" class="headerlink" title="百度文库文字复制及原格式下载"></a>百度文库文字复制及原格式下载</h3><p>功能如标题，能够绕开百度文库限制，实现文库中文章文字的复制及原格式下载。</p>
<h2 id="4-豆瓣系列"><a href="#4-豆瓣系列" class="headerlink" title="(4) 豆瓣系列"></a>(4) 豆瓣系列</h2><h3 id="MoreMovieRatings"><a href="#MoreMovieRatings" class="headerlink" title="MoreMovieRatings"></a>MoreMovieRatings</h3><p>在豆瓣电影中，除豆瓣评分外，还显示IMDb评分。  </p>
<h3 id="豆瓣资源下载大师：1秒搞定豆瓣电影-音乐-图书下载"><a href="#豆瓣资源下载大师：1秒搞定豆瓣电影-音乐-图书下载" class="headerlink" title="豆瓣资源下载大师：1秒搞定豆瓣电影|音乐|图书下载"></a>豆瓣资源下载大师：1秒搞定豆瓣电影|音乐|图书下载</h3><p>在豆瓣电影|音乐|图书的具体页面右侧，显示全网能够找到的下载链接。（含直链|FTP|BT|磁力|ED2K|NZB|迅雷|百度盘|115盘等）<br>省了自己一个个搜索下载链接的功夫，直接在页面右侧点击对应下载链接即可。  </p>
<h2 id="5-其他"><a href="#5-其他" class="headerlink" title="(5) 其他"></a>(5) 其他</h2><h3 id="破解VIP会员视频集合"><a href="#破解VIP会员视频集合" class="headerlink" title="破解VIP会员视频集合"></a>破解VIP会员视频集合</h3><p>VIP会员破解，适用于爱奇艺，优酷等多个平台。<br>可以实现VIP会员视频的免费观看。  </p>
]]></content>
  </entry>
  <entry>
    <title>Linux备份方法</title>
    <url>/2019/12/30/Linux%E5%A4%87%E4%BB%BD%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h1><p>由于Ubuntu自带的backup存在很多bug，问题多多，所以在此介绍一下其他的Linux备份方法。<br>以下分别介绍parimage和tar两种常用的备份手段。<br><a id="more"></a></p>
<h1 id="2-parimage"><a href="#2-parimage" class="headerlink" title="2. parimage"></a>2. parimage</h1><h2 id="1-使用条件"><a href="#1-使用条件" class="headerlink" title="(1)使用条件"></a>(1)使用条件</h2><p>parimage不支持etx4格式的分区。<br>若要使用parimage，必须使用其他格式进行分区。<br><span class="exturl" data-url="aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1PVWYyc2s3Mi1PRSZhbXA7dD0zNXM=" title="https://www.youtube.com/watch?v=OUf2sk72-OE&amp;t=35s">使用教程<i class="fa fa-external-link"></i></span></p>
<h2 id="2-安装"><a href="#2-安装" class="headerlink" title="(2) 安装"></a>(2) 安装</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install partimage</span><br></pre></td></tr></table></figure>
<h2 id="3-创建备份文件夹"><a href="#3-创建备份文件夹" class="headerlink" title="(3) 创建备份文件夹"></a>(3) 创建备份文件夹</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir &#x2F;backup</span><br></pre></td></tr></table></figure>
<h2 id="4-开始备份"><a href="#4-开始备份" class="headerlink" title="(4) 开始备份"></a>(4) 开始备份</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">partimage</span><br></pre></td></tr></table></figure>
<p>按照提示一步步进行操作即可。  </p>
<h1 id="3-tar命令备份"><a href="#3-tar命令备份" class="headerlink" title="3. tar命令备份"></a>3. tar命令备份</h1><h2 id="1-备份命令"><a href="#1-备份命令" class="headerlink" title="(1) 备份命令"></a>(1) 备份命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar cvpzf backup.tgz –exclude&#x3D;&#x2F;proc –exclude&#x3D;&#x2F;lost+found –exclude&#x3D;&#x2F;backup.tgz –exclude&#x3D;&#x2F;mnt –exclude&#x3D;&#x2F;sys &#x2F;</span><br></pre></td></tr></table></figure>
<h2 id="2-命令解释"><a href="#2-命令解释" class="headerlink" title="(2) 命令解释"></a>(2) 命令解释</h2><ul>
<li>cvpfz: “创建档案文件”、“保持权限”(保留所有东西原来的权限)、“使用gzip来减小文件尺寸”。</li>
<li>backup.gz: 文件名</li>
<li>/: 要备份的目录，这里是整个文件系统</li>
<li>-exlude： 不备份的目录，包括“/proc”、“/lost+ found”、“/sys”、“/mnt”和“backup.gz”自身</li>
</ul>
<h2 id="（3）备份恢复"><a href="#（3）备份恢复" class="headerlink" title="（3）备份恢复"></a>（3）备份恢复</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar xvpfz backup.tgz -C &#x2F;</span><br><span class="line"># mkdir proc</span><br><span class="line"># mkdir lost+found</span><br><span class="line"># mkdir mnt</span><br><span class="line"># mkdir sys</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>备份</tag>
      </tags>
  </entry>
  <entry>
    <title>mac下配置环境变量的方法</title>
    <url>/2019/12/30/mac%E4%B8%8B%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<h1 id="1-环境变量位置"><a href="#1-环境变量位置" class="headerlink" title="1. 环境变量位置"></a>1. 环境变量位置</h1><div class="table-container">
<table>
<thead>
<tr>
<th>位置</th>
<th>权限</th>
<th>优先级</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>/etc/paths</td>
<td>root</td>
<td>1</td>
<td>文件，每一行代表一个环境变量</td>
</tr>
<tr>
<td>/etc/paths.d/xxx</td>
<td>root</td>
<td>2</td>
<td>文件夹，里面可以新建任意不带后缀名的文件，环境变量写在文件中</td>
</tr>
<tr>
<td>~/.bash_profile</td>
<td>用户</td>
<td>3</td>
<td>文件，~代表当前用户目录，该文件可能不存在，不存在创建一个即可</td>
</tr>
<tr>
<td>临时变量</td>
<td>用户</td>
<td>4</td>
<td>仅在当前终端有效，关闭终端后自动失效</td>
</tr>
</tbody>
</table>
</div>
<a id="more"></a>
<h1 id="2-环境变量修改"><a href="#2-环境变量修改" class="headerlink" title="2. 环境变量修改"></a>2. 环境变量修改</h1><p>优先级代表查找顺序，优先级高的优先查找和执行。<br>不建议修改root权限的环境变量，建议只修改用户权限的环境变量，即~/.bash_profile中的环境变量。  </p>
<h1 id="3-bash-profile修改"><a href="#3-bash-profile修改" class="headerlink" title="3. ~/.bash_profile修改"></a>3. ~/.bash_profile修改</h1><p>该文件格式是：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export PATH&#x3D;&lt;path1&gt;:&lt;path2&gt;:&lt;path3&gt;</span><br></pre></td></tr></table></figure></p>
<p>如：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export PYTHON_HOME&#x3D;~&#x2F;WorkSpace&#x2F;Python</span><br><span class="line">export ANDROID_ADB&#x3D;~&#x2F;Library&#x2F;Android&#x2F;sdk&#x2F;platform-tools</span><br><span class="line">export PATH&#x3D;$&#123;PATH&#125;:$&#123;PYTHON_HOME&#125;:$&#123;ANDROID_ADB&#125;</span><br></pre></td></tr></table></figure><br>只需按照格式，在文件中添加对应环境变量即可。  </p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>配置</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>mac中修改默认文件的打开方式</title>
    <url>/2019/12/30/mac%E4%B8%8B%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E6%96%87%E4%BB%B6%E7%9A%84%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="1-修改单个文件的默认打开方式"><a href="#1-修改单个文件的默认打开方式" class="headerlink" title="1. 修改单个文件的默认打开方式"></a>1. 修改单个文件的默认打开方式</h1><p>右键单击该文件 -&gt; 打开方式 -&gt; 其他 -&gt; 选择一个应用程序 -&gt; 始终以此方式打开<br><a id="more"></a><br><img src="\images\pasted-5.png" alt="upload successful"></p>
<h1 id="2-修改同类型文件的默认打开方式"><a href="#2-修改同类型文件的默认打开方式" class="headerlink" title="2. 修改同类型文件的默认打开方式"></a>2. 修改同类型文件的默认打开方式</h1><p>右键单击该文件 -&gt; 显示简介 -&gt; 打开方式 -&gt; 选择一个应用程序 -&gt; 全部更改</p>
<p><img src="\images\pasted-7.png" alt="upload successful"></p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>让你摆脱鼠标的Chrome控制插件——Vimium</title>
    <url>/2019/12/30/%E8%AE%A9%E4%BD%A0%E6%91%86%E8%84%B1%E9%BC%A0%E6%A0%87%E7%9A%84Chrome%E6%8E%A7%E5%88%B6%E6%8F%92%E4%BB%B6%E2%80%94%E2%80%94Vimium/</url>
    <content><![CDATA[<h1 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h1><p>今天推荐一款Chrome上的插件，Vimium。<br>Vimium可以通过设置键盘快捷键，进而控制Chrome浏览器。其功能十分全面强大，通过键盘快捷键，可以完全取代鼠标点击等操作。  </p>
<a id="more"></a>
<h1 id="二、常用命令"><a href="#二、常用命令" class="headerlink" title="二、常用命令"></a>二、常用命令</h1><p>此处简单介绍一下我自己设置的操作快捷键（快捷键可自由定制），以此来介绍Vimium能够做到的基础功能。</p>
<h2 id="1-网页操作"><a href="#1-网页操作" class="headerlink" title="1. 网页操作"></a>1. 网页操作</h2><p>q 历史向前<br>e 历史向后  </p>
<h2 id="2-页面操作"><a href="#2-页面操作" class="headerlink" title="2. 页面操作"></a>2. 页面操作</h2><p>w 到达页面顶端<br>s 到达页面底端<br>a 到达页面最左端<br>d 到达页面最右端<br>j 页面向下滑动（相当于滚轮向下一格）<br>k 页面向上欢动（相当于滚轮向下一格）<br>x 关闭页面（相当于ctrl+w)<br>z 恢复关闭的标签页<br>r 刷新页面  </p>
<h2 id="3-标签页操作"><a href="#3-标签页操作" class="headerlink" title="3. 标签页操作"></a>3. 标签页操作</h2><p>h 切换到左边标签页<br>l 切换到右边标签页<br>t 新建标签页  </p>
<h2 id="4-文本相关"><a href="#4-文本相关" class="headerlink" title="4. 文本相关"></a>4. 文本相关</h2><p>c 复制向前页面url<br>v 在新的标签页打开“剪切板”内的地址<br>o 从历史记录和书签中进行搜索<br>i 将焦点置于页面第一个文本框<br>f 在新的标签页打开当前页面的某个链接<br>gf 拷贝当前页面的某个链接<br>gs 查看页面源代码  </p>
<h1 id="三、使用体验"><a href="#三、使用体验" class="headerlink" title="三、使用体验"></a>三、使用体验</h1><p>用惯了Vimium后，基本在chrome内部摆脱了对鼠标的依赖，工作效率得到了一定的提升。<br>但其也存在着一定不足。<br>首先，只适用于浏览器，具体windows应用间暂时还是无法摆脱对鼠标的依赖。<br>其次，某些网页端应用往往拥有自己的快捷键规则，往往会和Vimium的快捷键造成冲突，引发错误。</p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>插件</tag>
        <tag>Vimium</tag>
      </tags>
  </entry>
  <entry>
    <title>一套键鼠控制多个显示器的方法</title>
    <url>/2019/12/30/%E4%B8%80%E5%A5%97%E9%94%AE%E9%BC%A0%E6%8E%A7%E5%88%B6%E5%A4%9A%E4%B8%AA%E8%AE%BE%E5%A4%87%EF%BC%88%E6%98%BE%E7%A4%BA%E5%99%A8%EF%BC%89%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>当拥有多台设备时，若是能够只用一套键鼠连接所有设备，那将非常方便。<br>此处介绍几种能够实现多设备键鼠互连的方法。  </p>
<a id="more"></a>
<h1 id="1-有网络（无线）"><a href="#1-有网络（无线）" class="headerlink" title="1. 有网络（无线）"></a>1. 有网络（无线）</h1><h2 id="1-Synergy"><a href="#1-Synergy" class="headerlink" title="(1) Synergy"></a>(1) Synergy</h2><p>Synergy目前官网是付费的，不过可以Google<code>1.5的免费版本</code>先进行试用，觉得OK了再购买最新高级版，享受更多功能。<br>其优势在于跨平台，可以连接Mac/win/linux等多个系统的设备。</p>
<h2 id="2-mouth-without-borders"><a href="#2-mouth-without-borders" class="headerlink" title="(2) mouth without borders"></a>(2) mouth without borders</h2><p>免费，但仅限windows，仅限两台设备连接</p>
<h1 id="2-无网络（有线）"><a href="#2-无网络（有线）" class="headerlink" title="2. 无网络（有线）"></a>2. 无网络（有线）</h1><h2 id="1-Smart-KM-Link"><a href="#1-Smart-KM-Link" class="headerlink" title="(1) Smart KM Link"></a>(1) Smart KM Link</h2><p>需要两台电脑都有usb接口，通过usb接口进行数据传输。<br>只支持两台设备互联，速度相比Synergy和mouth without borders更快，有线总是比无线更快更稳定，所以卡顿，断线的情况很少。</p>
<h2 id="2-KVM转换器"><a href="#2-KVM转换器" class="headerlink" title="(2) KVM转换器"></a>(2) KVM转换器</h2><p>支持多个接口，多个设备，最强大的方法。</p>
<h1 id="3-其他"><a href="#3-其他" class="headerlink" title="3. 其他"></a>3. 其他</h1><p>最终，我通过将服务器的服务，封装为URL链接的方式解决了这个问题。<br>自此，在用户机的浏览器上，只需输入服务器对应服务的ip和端口号，即可访问服务，也就用不着用键鼠再链接服务器了。<br>自用服务器常用的服务为Jupyter notebook和Transmission，都支持URL封装，具体配置将另开一篇博客进行介绍。</p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
  </entry>
  <entry>
    <title>ubuntu下利用openconnect科学上网</title>
    <url>/2019/12/30/ubuntu%E4%B8%8B%E5%88%A9%E7%94%A8openconnect%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</url>
    <content><![CDATA[<h1 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h1><p>高校VPN往往使用Cisco connect进行封装。而Linux平台无法直接使用Cisco connect。<br>openconnect是Cisco connect的重新封装，比较稳定，可以在Linux平台上直接使用。  </p>
<a id="more"></a>
<h1 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install network-manager-openconnect-gnome</span><br></pre></td></tr></table></figure>
<h1 id="三、使用命令"><a href="#三、使用命令" class="headerlink" title="三、使用命令"></a>三、使用命令</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo openconnect -u &lt;user name&gt; &lt;vpn-server-ip&gt;</span><br></pre></td></tr></table></figure>
<p>回车键后，按照提示输入密码即可。  </p>
<h1 id="四、配置文件"><a href="#四、配置文件" class="headerlink" title="四、配置文件"></a>四、配置文件</h1><p>为了避免每次登陆都要输入ip、账号、密码的麻烦，也可直接修改配置文件。<br>存储配置文件后，每次openconnect启动，会直接按照配置文件中的参数运行。  </p>
]]></content>
      <tags>
        <tag>科学上网</tag>
        <tag>openconnect</tag>
      </tags>
  </entry>
  <entry>
    <title>R语言数据聚合和透视的实现方式</title>
    <url>/2019/12/30/R%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E8%81%9A%E5%90%88%E5%92%8C%E9%80%8F%E8%A7%86%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p>在R语言中，有多种方式实现数据的聚合和透视，包括自带函数和第三方库等。<br>这里举例几个自己使用过的函数。  </p>
<h1 id="1-sqldf"><a href="#1-sqldf" class="headerlink" title="1. sqldf"></a>1. sqldf</h1><p>sqldf包中的sqldf函数，直接使用SQL语言进行聚合。<br><a id="more"></a><br>可以实现SQL语言能够处理的所有操作，功能强大<br>资源消耗较小，运算效率较高<br>强烈推荐   </p>
<h1 id="2-reshape2"><a href="#2-reshape2" class="headerlink" title="2. reshape2"></a>2. reshape2</h1><p>reshape2包中的cast函数，可以实现Excel中数据透视表的所有功能<br>代码环境，数据透视表的定制型和便捷性更强<br>资源消耗较小，运算效率较高<br>推荐  </p>
<h1 id="3-aggregate"><a href="#3-aggregate" class="headerlink" title="3. aggregate"></a>3. aggregate</h1><p>R原生函数，需要自己建立factor level，可由多个factor level组成list，实现多个level同时聚合<br>资源消耗较大，运算效率较低<br>无法实现复杂的透视逻辑，一次只能指定一种运算（sum/mean/count）<br>不推荐  </p>
<h1 id="4-tapply"><a href="#4-tapply" class="headerlink" title="4. tapply"></a>4. tapply</h1><p>原生函数，同aggregate，需要自己建立factor level<br>资源消耗加大，运算效率较低<br>无法实现复杂的透视逻辑，一次只能指定一种运算（sum/mean/count）<br>不推荐  </p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>数据</tag>
      </tags>
  </entry>
  <entry>
    <title>R中文乱码的解决方法</title>
    <url>/2019/12/30/R%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a>一、问题描述</h1><p>R和Rstudio对中文的支持较差，以至于中文容易在console中变成乱码。</p>
<h1 id="二、网上提供的解决方案"><a href="#二、网上提供的解决方案" class="headerlink" title="二、网上提供的解决方案"></a>二、网上提供的解决方案</h1><p>网上找到的几种解决方案，核心思路都是将字符编码集转换为utf-8，从而实现对中文的支持。<br><a id="more"></a><br>具体在实现方法上有所不同，分为以下几种：  </p>
<ul>
<li>将R Script的编码改为utf-8</li>
<li>将源数据的编码改为utf-8<ul>
<li>使用文本编辑器直接修改</li>
<li>在console中通过iconv()函数转换字符编码集</li>
</ul>
</li>
<li>将RStudio的语言改为utf-8<ul>
<li>控制台-&gt;地区与语言-&gt;系统管理(Tab)-&gt;非 unicde程式的语言-&gt;选择 中文, 简体</li>
<li>console中设定”Sys.setlocale(“LC_ALL”,”Chinese”)”</li>
</ul>
</li>
<li>将区域语言改为中文/英文\</li>
</ul>
<h1 id="二、其他解决方案"><a href="#二、其他解决方案" class="headerlink" title="二、其他解决方案"></a>二、其他解决方案</h1><p>针对我遇到的情况，以上方法全部无效。<br>经过尝试，最终有效的解决方案为：  </p>
<ul>
<li>R和Excel的默认编码都是ASCII  </li>
<li>不改变R和RStudio的编码，即从ASCII改为utf-8  </li>
<li>而是将原始数据的编码格式改为ASCII，进行读取  </li>
</ul>
<p>最终成功解决中文乱码问题。</p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>乱码</tag>
      </tags>
  </entry>
  <entry>
    <title>Git学习笔记</title>
    <url>/2019/12/30/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h1><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><p>CVS/SVN是集中式版本控制，有中央服务器，所有子电脑通过中央服务器交互文件。Git是分布式版本控制，<br>各个子电脑自由交换文件。<br><span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS8=" title="https://git-scm.com/">git官网<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20vbGlhb3h1ZWZlbmcvbGVhcm4tamF2YS9yYXcvbWFzdGVyL3RlYWNoL2dpdC1jaGVhdHNoZWV0LnBkZg==" title="https://gitee.com/liaoxuefeng/learn-java/raw/master/teach/git-cheatsheet.pdf">git cheet sheet<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cubGlhb3h1ZWZlbmcuY29tL3dpa2kvODk2MDQzNDg4MDI5NjAw" title="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰Git教程<i class="fa fa-external-link"></i></span><br><a id="more"></a></p>
<h2 id="2-版本管理流程"><a href="#2-版本管理流程" class="headerlink" title="2. 版本管理流程"></a>2. 版本管理流程</h2><p>add   -&gt; 本地修改<br>commit -&gt; 本地版本更新<br>push  -&gt; 远程同步  </p>
<h2 id="3-工作区与暂存区"><a href="#3-工作区与暂存区" class="headerlink" title="3. 工作区与暂存区"></a>3. 工作区与暂存区</h2><p>工作区（working dirctory）：就是电脑中的目录，文件夹<br>版本库（Repository）：工作区中有一个隐藏目录.git。这个就是git的版本库  </p>
<ul>
<li>版本库里存了很多东西，其中最重要的就暂存区（stage/index）</li>
<li>git add将文件加入暂存区</li>
<li>git commit将暂存区所有文件提交到当前分支</li>
</ul>
<h1 id="二、常用命令"><a href="#二、常用命令" class="headerlink" title="二、常用命令"></a>二、常用命令</h1><h2 id="1-创建版本库"><a href="#1-创建版本库" class="headerlink" title="1.创建版本库"></a>1.创建版本库</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init #初始化仓库</span><br><span class="line">git add &lt;file&gt; #添加文件</span><br><span class="line">git commit -m &quot;备注&quot; #提交文件</span><br><span class="line">git status #掌握仓库当前状态</span><br><span class="line">git diff &lt;file&gt; #比较文件版本差异</span><br></pre></td></tr></table></figure>
<h2 id="2-版本记录"><a href="#2-版本记录" class="headerlink" title="2. 版本记录"></a>2. 版本记录</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log --pretty&#x3D;oneline #查看最近到最远的commit提交历史</span><br><span class="line">#HEAD表示当前版本</span><br><span class="line">#HEAD^表示上一个版本</span><br><span class="line">#HEAD^^表示上上版本</span><br><span class="line">#HEAD~100表示向上100个版本</span><br><span class="line">git reset --hard &lt;commit id&gt; #回退到之前版本</span><br><span class="line">git reflog #查看git中的命令历史</span><br></pre></td></tr></table></figure>
<h2 id="3-修改管理"><a href="#3-修改管理" class="headerlink" title="3. 修改管理"></a>3. 修改管理</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout -- &lt;file&gt; #撤销&lt;file&gt;在工作区的所有修改</span><br></pre></td></tr></table></figure>
<p>如果未放入暂存区（gitadd），则回滚到和版本库（上一个commit）一模一样的状态。<br>如果已经放入暂存区(git add），之后又进行了修改，则回滚到暂存区（上一个add状态）。<br>总之，就是回滚到最近的一个commit或add状态。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git rm &lt;file&gt; #删除文件，然后通过git commit进行确认，或通过git checkout -- &lt;file&gt;进行撤销</span><br></pre></td></tr></table></figure></p>
<h2 id="4-远程仓库"><a href="#4-远程仓库" class="headerlink" title="4. 远程仓库"></a>4. 远程仓库</h2><h3 id="1-连接本地库和github：Git仓库之间传输通过SSH加密"><a href="#1-连接本地库和github：Git仓库之间传输通过SSH加密" class="headerlink" title="(1) 连接本地库和github：Git仓库之间传输通过SSH加密"></a>(1) 连接本地库和github：Git仓库之间传输通过SSH加密</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 进入git bash</span><br><span class="line">ssh-keygen -t rsa -C &quot;yehansharp@gmail.com&quot; #创建SSH key（默认存储在用户根目录）</span><br></pre></td></tr></table></figure>
<p>登录github，在setting中添加SSH keys，粘贴id_rsa.pub文件的内容。<br>添加了SSH keys的电脑才可以向github的库中推送git commimit。  </p>
<h3 id="2-添加远程库"><a href="#2-添加远程库" class="headerlink" title="(2)添加远程库"></a>(2)添加远程库</h3><p>在github上创建库<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;yehansharp&#x2F;learngit.git</span><br></pre></td></tr></table></figure></p>
<ul>
<li>origin是给给远程库的代号</li>
<li>yehansharp是github用户名</li>
<li>learngit是远程库真正的名字</li>
</ul>
<h3 id="3-将本地库内容推送到远程库上"><a href="#3-将本地库内容推送到远程库上" class="headerlink" title="(3)将本地库内容推送到远程库上"></a>(3)将本地库内容推送到远程库上</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push &lt;-u&gt; origin master</span><br></pre></td></tr></table></figure>
<ul>
<li>origin是远程库的名字</li>
<li>master是推送的，本地库的分支</li>
<li>-u是指第一次推送时，将本地库的master与远程的master关联起来，之后可省略</li>
<li>当第一次使用Git的clone或者push命令连接GitHub时，会得到一个ssh警告，输入yes回车即可</li>
</ul>
<h3 id="4-从远程库克隆"><a href="#4-从远程库克隆" class="headerlink" title="(4) 从远程库克隆"></a>(4) 从远程库克隆</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;yehansharp&#x2F;gitskills</span><br></pre></td></tr></table></figure>
<h3 id="5-查看远程库"><a href="#5-查看远程库" class="headerlink" title="(5) 查看远程库"></a>(5) 查看远程库</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure>
<p>-v显示更详细信息</p>
<h2 id="5-分支管理"><a href="#5-分支管理" class="headerlink" title="5. 分支管理"></a>5. 分支管理</h2><p>原理：<span class="exturl" data-url="aHR0cHM6Ly93d3cubGlhb3h1ZWZlbmcuY29tL3dpa2kvODk2MDQzNDg4MDI5NjAwLzkwMDAwMzc2Nzc3NTQyNA==" title="https://www.liaoxuefeng.com/wiki/896043488029600/900003767775424">指针<i class="fa fa-external-link"></i></span><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch #查看分支</span><br><span class="line">git branch &lt;name&gt; #创建分支</span><br><span class="line">git checkout &lt;name&gt; #切换分支</span><br><span class="line">git checkout -b &lt;name&gt; #创建+切换分支</span><br><span class="line">git merge &lt;name&gt; #合并某分支到当前分支</span><br><span class="line">git merge --no-ff -m &quot;merge with no-ff&quot; &lt;name&gt; #默认使用Fast forward模式合并，合并后删除分支</span><br><span class="line">git branch -d &lt;name&gt; #删除分支，只能删除合并后的分支</span><br><span class="line">git branch -D &lt;name&gt; #强制删除分支，可以删除还未合并的分支</span><br></pre></td></tr></table></figure></p>
<h2 id="6-状态存储"><a href="#6-状态存储" class="headerlink" title="6. 状态存储"></a>6. 状态存储</h2><p>若你工作到一半，需要转换到其他分支，但又不想让只做到一半的工作成为一个commit，则可以使用stash临<br>时存储<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git stash #备份当前的工作区的内容，将当前的工作区内容保存到Git栈中。</span><br><span class="line">git stash list # 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。</span><br><span class="line">git stash apply #恢复，但恢复后，stash list内容并不删除，需要用git stash drop来删除</span><br><span class="line">git stash pop #从Git栈中读取最近一次保存的内容，并将其从stash list中删除</span><br><span class="line">git stash clear # 清空Git栈。</span><br></pre></td></tr></table></figure></p>
<h2 id="7-标签管理"><a href="#7-标签管理" class="headerlink" title="7. 标签管理"></a>7. 标签管理</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git tag &lt;name&gt; #创建标签，默认是向最新提交的commit打标签</span><br><span class="line">git tag &lt;name&gt; &lt;commit id&gt; #向指定commit打标签</span><br><span class="line">git tag -a &lt;tagname&gt; -m #&quot;说明文字&quot; &lt;commit id&gt; 添加标签说明</span><br><span class="line">git tag -s v0.2 -m &quot;signed version 0.2 released&quot; &lt;commit id&gt;#通过-s用私钥签名某一个标签</span><br><span class="line">git tag #查看所有标签，按字母排序</span><br><span class="line">git show &lt;tagname&gt; #查看特定标签信息</span><br><span class="line">git push origin &lt;tagname&gt; #向远程可以推送一个本地标签；</span><br><span class="line">git push origin --tags #可以推送全部未推送过的本地标签；</span><br><span class="line">git tag -d &lt;tagname&gt; #可以删除一个本地标签；</span><br><span class="line">git push origin :refs&#x2F;tags&#x2F;&lt;tagname&gt; #可以删除一个远程标签。</span><br></pre></td></tr></table></figure>
<h2 id="8-git配置"><a href="#8-git配置" class="headerlink" title="8. git配置"></a>8. git配置</h2><p>所有仓库的存储文件都存放在.git/config文件中，可以直接进行文本编辑<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global color.ui true #显示颜色</span><br></pre></td></tr></table></figure><br>配置工作区下的&lt;.gitignore&gt;文件，设置在提交时每次都忽略特定的文件，&lt;.gitignore&gt;文件本身要放入版本<br>库中进行版本管理<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global alias.st statu #缩写，将status缩写为st</span><br></pre></td></tr></table></figure></p>
<h2 id="9-自己搭建Git服务器，不使用Github（商业机密）"><a href="#9-自己搭建Git服务器，不使用Github（商业机密）" class="headerlink" title="9. 自己搭建Git服务器，不使用Github（商业机密）"></a>9. 自己搭建Git服务器，不使用Github（商业机密）</h2><p>(1) 运行Linux的机器，登录用户拥有sudo权限<br>(2) 安装git<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><br>(3) 创建git用户<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo adduser git</span><br></pre></td></tr></table></figure><br>(4) 创建证书登录:收集所有需要登录的用户的公钥，就是他们自己的id_rsa.pub文件，把所有公钥导入<br>到/home/git/.ssh/authorized_keys文件里，一行一个。<br>(5) 初始化Git仓库<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#假定仓库为&#x2F;srv&#x2F;sample.git</span><br><span class="line">#跳转到&#x2F;srv目录下</span><br><span class="line">sudo git init --bare sample.git</span><br></pre></td></tr></table></figure><br>(6) 禁止用户直接登录服务器，只允许用户通过push和get与服务器交互数据<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo chown -R git:git sample.git</span><br></pre></td></tr></table></figure><br>(7) 禁用shell登录</p>
<ul>
<li>打开/etc/passwd文件</li>
<li>找到“git:x:1001:1001:,,,:/home/git:/bin/bash”</li>
<li>改为“git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell”</li>
</ul>
<p>(8) 克隆远程库<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git@server:&#x2F;srv&#x2F;sample.git</span><br></pre></td></tr></table></figure><br>(9) 本地编辑推送到远程库<br>(10) 公钥管理  </p>
<ul>
<li>如果团队很小，把每个人的公钥收集起来放到服务器的/home/git/.ssh/authorized_keys文件里就是可<br>行的。</li>
<li>如果团队有几百号人，就没法这么玩了，这时，可以用Gitosis来管理公钥。  </li>
</ul>
<p>(11) 权限控制<br>可以在服务器端编写一系列脚本来控制提交等操作，达到权限控制的目的。Gitolite就是这个工<br>具。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客系列（三）：Hexo博客编辑器</title>
    <url>/2019/12/30/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9Amd%E7%BC%96%E8%BE%91%E5%99%A8/</url>
    <content><![CDATA[<p>Hexo博客的默认格式是<code>.md</code>，那么自然需要一个配套的Markdown编辑器。<br>以下介绍三种自己用过的，Markdown编辑器。</p>
<h1 id="一、Mweb"><a href="#一、Mweb" class="headerlink" title="一、Mweb"></a>一、Mweb</h1><p>Mweb是Mac平台独占的一款Markdown编辑器，也是我目前用过体验最好的一款。<br><span class="exturl" data-url="aHR0cHM6Ly93d3cubXdlYi5pbS9oZWxwLmh0bWw=" title="https://www.mweb.im/help.html">Mweb官方教程<i class="fa fa-external-link"></i></span><br><a id="more"></a></p>
<h2 id="1-Mweb的优势"><a href="#1-Mweb的优势" class="headerlink" title="1. Mweb的优势"></a>1. Mweb的优势</h2><p>尝试Mweb进行Hexo Markdwon书写，效果很好，主要优势有以下几点：</p>
<ol>
<li>文件管理，直接在Mweb进行一站式文件编辑与管理。</li>
<li>可以设置回车直接换行，不用每行后面疯狂打空格了</li>
<li>所见即所得，可以直接预览</li>
<li>Markdown中的图片将自动上传到图片云服务中。</li>
</ol>
<h2 id="2-Mweb的使用方法"><a href="#2-Mweb的使用方法" class="headerlink" title="2. Mweb的使用方法"></a>2. Mweb的使用方法</h2><h3 id="1-内部模式"><a href="#1-内部模式" class="headerlink" title="(1) 内部模式"></a>(1) 内部模式</h3><p>Mweb第一次打开时，默认是内部模式，可以使用快捷键 CMD + L 从外部模式切换到内部模式。<br>Mweb的内部模式其实就是一个Markdown版本的笔记管理软件，如为知笔记、印象笔记、有道云笔记等。<br>除了对于部分静态博客的发布支持较好外，其他功能都与大众笔记软件差别不大，如层级分类、快速笔记、标<br>签、搜索等。<br>由于我日常笔记已经使用了印象笔记，且日常处理的文档以word居多，故而内部模式使用不多。<br>不过对于使用MD来进行所有文档整理的同学来说，这个功能显得格外方便。  </p>
<h3 id="2-外部模式"><a href="#2-外部模式" class="headerlink" title="(2) 外部模式"></a>(2) 外部模式</h3><p>按 CMD + E 打开从内部模式切换到外部模式，或在“偏好设置”中设置打开默认为外部模式。<br>点击左下角的 “+” 按钮，选择要引入的文件夹。引入之后，该文件夹内的所有md文件会显示在Mweb中。<br>对应到Hexo的博客文件结构，即为”_post”文件夹。</p>
<p><img src="\images\pasted-0.png" alt="upload successful"></p>
<p>选择完文件路径后，需要填写Mweb中的部分设置。</p>
<p><img src="\images\pasted-1.png" alt="upload successful"></p>
<p>“把换行转为<code>&lt;/br&gt;</code> 标签”的意思就是回车自动换行。否则按照原生Markdown规则，在每一句话后面敲两个<code>空格</code>才能进行换行。自动换行方便了很多，建议勾选。<br>“保存插入的图片的文件夹的名称”是指Mweb会在你引入的文件夹后创建一个新的文件夹，比如默认的”/media”。若是后面没有勾选<code>把插入的图片自动上传至</code>，则Mweb会在本地进行保存。<br>若勾选<code>把插入的图片自动上传至</code>，则Mweb会要求你提供云图片服务的账号密码，随后Mweb会自动把每<br>张图片上传到云服务器上，并在MD文档中使用云服务器中图片的url。如此，不需要在本地存储图片。<br>自此，若需要新建md文档，只需在Mweb使用快捷键cmd+n 即可，完成在Mweb中的一站式md文档编辑。</p>
<h3 id="3-图床管理"><a href="#3-图床管理" class="headerlink" title="(3) 图床管理"></a>(3) 图床管理</h3><p>对于Hexo的静态博客需求而言，建议不勾选<code>把插入的图片自动上传至</code>，而是采用手动图片上传的方法。</p>
<p><img src="\images\pasted-2.png" alt="upload successful"><br>原因是不勾选<code>把插入的图片自动上传至</code>，则会在hexo文件夹中的/media目录中对图片进行静态存储，博客调<br>用图片时也会优先调用本地静态资源，避免了由于图床服务器挂掉引起的一系列图片事故。<br>另外，在编辑完文档后手动上传，操作非常简单，而且能给图片多加一个备份，便捷且安全。<br>手动上传图片需要点击Mweb左上方分享-把本地图片传至图床-上传本地图片即可。</p>
<p><img src="\images\pasted-3.png" alt="upload successful"></p>
<p><img src="\images\pasted-4.png" alt="upload successful"></p>
<h1 id="二、Sublime下的Markdown插件"><a href="#二、Sublime下的Markdown插件" class="headerlink" title="二、Sublime下的Markdown插件"></a>二、Sublime下的Markdown插件</h1><p>由于Mac Pro的丢失，被迫迁移到了Windows平台，自然无法继续使用Mweb。<br>为了继续进行Markdown写作，并维持极简，我的第一选择是借助已有的Sublime编辑器，安装Markdown插件进行写作。</p>
<h2 id="1-Sublime下的插件安装"><a href="#1-Sublime下的插件安装" class="headerlink" title="1. Sublime下的插件安装"></a>1. Sublime下的插件安装</h2><h3 id="1-Package-control安装"><a href="#1-Package-control安装" class="headerlink" title="(1) Package control安装"></a>(1) Package control安装</h3><p>Sublime借助Package control来管理插件。因此，为了安装插件，必须先配置Package control。<br>a. 进入命令行<br>Ctrl + ` 进入命令行，或通过View &gt; Show Console进入命令行<br>b. 安装Package control<br>命令行中输入以下代码<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request,os,hashlib; h &#x3D; &#39;df21e130d211cfc94d9b0905775a7c0f&#39; + &#39;1e3d39e33b79698005270310898eea76&#39;; pf &#x3D; &#39;Package Control.sublime-package&#39;; ipp &#x3D; sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by &#x3D; urllib.request.urlopen( &#39;http:&#x2F;&#x2F;packagecontrol.io&#x2F;&#39; + pf.replace(&#39; &#39;, &#39;%20&#39;)).read(); dh &#x3D; hashlib.sha256(by).hexdigest(); print(&#39;Error validating download (got %s instead of %s), please try manual install&#39; % (dh, h)) if dh !&#x3D; h else open(os.path.join( ipp, pf), &#39;wb&#39; ).write(by)</span><br></pre></td></tr></table></figure><br>c. 卸载Package control<br>若Package control安装有问题，则需要先卸载再重新安装，卸载流程如下：</p>
<ul>
<li>打开sublime，选择Preferences &gt; Browse Packages</li>
<li>返回到文件夹上一级，进入Installed Packages</li>
<li>删除 Package Control.sublime-package</li>
<li>重新安装package control</li>
</ul>
<h3 id="2-插件安装"><a href="#2-插件安装" class="headerlink" title="(2) 插件安装"></a>(2) 插件安装</h3><p>插件安装流程如下</p>
<ul>
<li>Command + Shift + p 调出面板</li>
<li>输入pci</li>
<li>进入Package Control</li>
<li>输入插件名，回车</li>
</ul>
<p>插件卸载流程如下</p>
<ul>
<li>Command + Shift + p 调出面板</li>
<li>输入remove</li>
<li>进入Package Control</li>
<li>输入插件名，回车</li>
</ul>
<h2 id="2-Sublime下的Markdown插件"><a href="#2-Sublime下的Markdown插件" class="headerlink" title="2. Sublime下的Markdown插件"></a>2. Sublime下的Markdown插件</h2><p>在Sublime下进行Markdown编辑，主要使用两款插件：MarkdownEditing和OmniMarkupPreviewer。</p>
<h3 id="1-MarkdownEditing"><a href="#1-MarkdownEditing" class="headerlink" title="(1) MarkdownEditing"></a>(1) MarkdownEditing</h3><p>MarkdownEditing主要用于Markdown文件的编辑。其支持高亮显示，以及多种快捷键。<br>常用快捷键如下所示<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">command + option + k 插入链接</span><br><span class="line">command + shift + k 插入图片</span><br><span class="line">拷贝一个链接，选中文本后按下 ⌘⌥V 会自动插入内联链接。</span><br><span class="line">拷贝一个链接，选中文本后按下 ⌘⌥R 会自动插入引用链接。</span><br><span class="line">⌘⌥K 插入链接</span><br><span class="line">⌘⇧K 插入图片</span><br><span class="line">⌘⇧B 加粗体</span><br><span class="line">⌘⇧I 加斜体</span><br><span class="line">⌘⇧6 插入稳定脚注</span><br><span class="line">⌘^1 - ⌘^6 从一级标题到六级标题</span><br><span class="line">⇧Tab 折叠内容</span><br></pre></td></tr></table></figure></p>
<h3 id="2-OmniMarkupPreviewer"><a href="#2-OmniMarkupPreviewer" class="headerlink" title="(2) OmniMarkupPreviewer"></a>(2) OmniMarkupPreviewer</h3><p>OmniMarkupPreviewer用于将编辑好的Markdown文件，在浏览器上预览效果。</p>
<h2 id="3-存在问题"><a href="#3-存在问题" class="headerlink" title="3. 存在问题"></a>3. 存在问题</h2><p>虽然Sublime通过安装第三方插件，可以实现Markdwon文件的编辑。然而，与Mweb相比，还是存在很多不便，主要集中在以下几个方面：</p>
<ul>
<li>不能所见即所得，因为MD的编辑和预览是由两个插件合作实现。编写时不是很方便</li>
<li>没有图片插入支持。需要在MD文件中插入图片时，需要自己手动管理图片并输入链接，相对麻烦。</li>
</ul>
<h1 id="三、Hexo-admin"><a href="#三、Hexo-admin" class="headerlink" title="三、Hexo admin"></a>三、Hexo admin</h1><p>针对Sublime存在的一些问题，一个针对hexo博客有所优化的MD编辑器还是必要的，这便是Hexo admin。<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2phcmVkbHkvaGV4by1hZG1pbg==" title="https://github.com/jaredly/hexo-admin">Hexo admin官方链接<i class="fa fa-external-link"></i></span></p>
<h2 id="1-Hexo-admin安装"><a href="#1-Hexo-admin安装" class="headerlink" title="1. Hexo admin安装"></a>1. Hexo admin安装</h2><p>Hexo admin是专门针对hexo博客开发的一个轻量后台编辑插件，其安装非常简单，只需安装插件即可。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &lt;hexo folder&gt;</span><br><span class="line">npm install hexo-admin --save</span><br></pre></td></tr></table></figure></p>
<h2 id="2-使用"><a href="#2-使用" class="headerlink" title="2. 使用"></a>2. 使用</h2><p>安装后，运行以下代码，即可在本地服务器运行hexo。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &lt;hexo folder&gt;</span><br><span class="line">hexo s -g</span><br></pre></td></tr></table></figure><br>本地博客默认地址为<code>http://localhost:4000</code>。此时，进入链接<code>http://localhost:4000/admin</code>即可进入hexo admin的后台管理页面。<br>其后台管理页面，可以实现博客的草稿，发布，编辑等功能，且可以直接在博客中粘贴图片，是一个功能完善的博客编辑器，能够满足日常基本编辑需求，相对Sublime要方便不少。</p>
<h2 id="3-存在问题-1"><a href="#3-存在问题-1" class="headerlink" title="3. 存在问题"></a>3. 存在问题</h2><p>然而，由于Hexo admin是个人维护的，已经几年未更新了，所以仍然存在着一些使用上的问题。</p>
<h3 id="1-安装时错误"><a href="#1-安装时错误" class="headerlink" title="(1) 安装时错误"></a>(1) 安装时错误</h3><p>在Hexo admin安装时，会出现包安装错误提示，这是由于其依赖的包很多已经过时了。<br>不过，目前来说，还不影响Hexo admin的正常使用，忽略即可。</p>
<h3 id="2-图片插入问题"><a href="#2-图片插入问题" class="headerlink" title="(2) 图片插入问题"></a>(2) 图片插入问题</h3><p>Hexo admin可以直接复制图片，然而由于bug原因，在插入图片时其前后会各自多加一个斜杠，导致链接错误。<br>为了图片能够正常显示，我们需要手动在前后各删除一个斜杠，有些不太方便。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E:\image                             # 原始图片位置</span><br><span class="line">![upload successful](\\images\pasted-3.png\)     # 直接向Hexo admin中粘贴图片，图片会被自动上传到路径&lt;hexo folder&gt;\images，并且图片会被自动命名。然而由于路径错误，图片无法正常显示。</span><br><span class="line">![upload successful](\images\pasted-3.png)       # 前后手动各删除一个斜杠后，图片可正常显示</span><br></pre></td></tr></table></figure></p>
<h1 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h1><p>Hexo博客的可视化编辑，Mweb是最好用的，然而其只支持Mac独占平台。<br>在Windows平台，可使用Hexo admin实现基本的可视化编辑。然而由于其长久不更新，功能显得先对基本，且存在一定bug需要手动修复弥补。<br>此外，Sublime加第三方插件也可满足需要。然而，其针对MD的第三方插件繁多，想要找到功能不覆盖影响，且搭配合理的插件组合相对麻烦。而且，针对图片管理没有很好地解决方案。</p>
]]></content>
      <categories>
        <category>项目实践</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客系列（二）：Hexo进阶配置</title>
    <url>/2019/12/29/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AHexo%E8%BF%9B%E9%98%B6%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="一、next主题配置"><a href="#一、next主题配置" class="headerlink" title="一、next主题配置"></a>一、next主题配置</h1><p>next的主题配置文件，位于<code>&lt;hexo folder&gt;\themes\next\_config.yml</code>。<br>注意区分<code>站点配置文件</code>和<code>主题配置文件</code>。<br>位于<code>&lt;hexo folder&gt;\_config.yml</code>的为<code>站点配置文件</code>。<br>位于<code>&lt;hexo folder&gt;\themes\next\_config.yml</code>的为<code>主题配置文件</code>。</p>
<h2 id="1-官方教程"><a href="#1-官方教程" class="headerlink" title="1. 官方教程"></a>1. 官方教程</h2><p><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lmlpc3NuYW4uY29tL3RoZW1lLXNldHRpbmdzLmh0bWw=" title="https://theme-next.iissnan.com/theme-settings.html">next主题配置_中文<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy9kb2NzL2dldHRpbmctc3RhcnRlZC8=" title="https://theme-next.org/docs/getting-started/">next主题配置_英文<i class="fa fa-external-link"></i></span><br><a id="more"></a></p>
<h2 id="2-风格配置"><a href="#2-风格配置" class="headerlink" title="2. 风格配置"></a>2. 风格配置</h2><p>next有四种风格：Muse(默认)，Mist，Pisces，Gemini。<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0" title="https://github.com/theme-next/hexo-theme-next">风格展示<i class="fa fa-external-link"></i></span><br>这里将风格改为Gemini，修改<code>主题配置文件</code>如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line"># scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure></p>
<h2 id="3-菜单配置"><a href="#3-菜单配置" class="headerlink" title="3. 菜单配置"></a>3. 菜单配置</h2><p>next默认只菜单项中只有home(首页), archieve(归档)。<br>这里打开更多菜单项：tags(标签),categories(分类)。</p>
<h3 id="1-主题配置文件修改"><a href="#1-主题配置文件修改" class="headerlink" title="(1) 主题配置文件修改"></a>(1) 主题配置文件修改</h3><p>修改<code>主题配置文件</code>如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home</span><br><span class="line">  #about: &#x2F;about&#x2F; || user</span><br><span class="line">  tags: &#x2F;tags || tags</span><br><span class="line">  categories: &#x2F;categories || th</span><br><span class="line">  archives: &#x2F;archives || archive</span><br><span class="line">  # schedule: &#x2F;schedule&#x2F; || calendar</span><br><span class="line">  # sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class="line">  # commonweal: &#x2F;404&#x2F; || heartbeat</span><br></pre></td></tr></table></figure></p>
<h3 id="2-tags标签配置"><a href="#2-tags标签配置" class="headerlink" title="(2) tags标签配置"></a>(2) tags标签配置</h3><p>生成标签页<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">cd &lt;hexo folder&gt;</span><br><span class="line">hexo new page tags</span><br><span class="line">---</span><br></pre></td></tr></table></figure><br>成功执行后生成文件<code>&lt;hexo folder&gt;\souce\tages\index.md</code>。修改文件内容如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tages</span><br><span class="line">date: 2019-12-27 22:15:29</span><br><span class="line">type: &quot;tags&quot;              # 添加此行</span><br><span class="line">---</span><br></pre></td></tr></table></figure><br>此后，可在具体每一篇博客文档中添加标签，文章将会自动被按照标签分类。标签添加如下所示<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &lt;title&gt;</span><br><span class="line">date: &lt;date&gt;</span><br><span class="line">tags: </span><br><span class="line">- &lt;tags1&gt;</span><br><span class="line">- &lt;tags2&gt;</span><br><span class="line">- &lt;tags3&gt;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>
<h3 id="3-categories分类配置"><a href="#3-categories分类配置" class="headerlink" title="(3) categories分类配置"></a>(3) categories分类配置</h3><p>生成分类页<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &lt;hexo folder&gt;</span><br><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><br>成功执行后生成文件<code>&lt;hexo folder&gt;\souce\categories\index.md</code>。修改文件内容如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2019-12-27 22:15:29</span><br><span class="line">type: &quot;categories&quot;              # 添加此行</span><br><span class="line">---</span><br></pre></td></tr></table></figure><br>此后，可在具体每一篇博客文档中添加分类，文章将会自动被按照分类进行整理。分类添加如下所示<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &lt;title&gt;</span><br><span class="line">date: &lt;date&gt;</span><br><span class="line">categories: </span><br><span class="line">- &lt;categories1&gt;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>
<h2 id="4-头像配置"><a href="#4-头像配置" class="headerlink" title="4. 头像配置"></a>4. 头像配置</h2><p>此处为侧边栏加入头像，修改<code>主题配置文件</code>如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line">  url: &lt;avatar image url&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="5-在侧边栏以及顶端显示当前阅读进度"><a href="#5-在侧边栏以及顶端显示当前阅读进度" class="headerlink" title="5. 在侧边栏以及顶端显示当前阅读进度"></a>5. 在侧边栏以及顶端显示当前阅读进度</h2><p>修改<code>主题配置文件</code>如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  enable: true</span><br><span class="line">  # Back to top in sidebar.</span><br><span class="line">  sidebar: false</span><br><span class="line">  # Scroll percent label in b2t button.</span><br><span class="line">  scrollpercent: true</span><br><span class="line">  </span><br><span class="line"># Reading progress bar</span><br><span class="line">reading_progress:</span><br><span class="line">  enable: top</span><br><span class="line">  # Available values: top | bottom</span><br><span class="line">  position: top</span><br><span class="line">  color: &quot;#37c6c0&quot;</span><br><span class="line">  height: 3px</span><br></pre></td></tr></table></figure></p>
<h2 id="6-保持侧边栏目录时刻展开，并关闭目录自动编号"><a href="#6-保持侧边栏目录时刻展开，并关闭目录自动编号" class="headerlink" title="6. 保持侧边栏目录时刻展开，并关闭目录自动编号"></a>6. 保持侧边栏目录时刻展开，并关闭目录自动编号</h2><p>修改<code>主题配置文件</code>如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: false</span><br><span class="line">  # If true, all words will placed on next lines if header width longer then sidebar width.</span><br><span class="line">  wrap: false</span><br><span class="line">  # If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span><br><span class="line">  expand_all: true</span><br><span class="line">  # Maximum heading depth of generated toc.</span><br><span class="line">  max_depth: 6</span><br></pre></td></tr></table></figure></p>
<h2 id="7-移除底部Hexo与Next声明"><a href="#7-移除底部Hexo与Next声明" class="headerlink" title="7. 移除底部Hexo与Next声明"></a>7. 移除底部Hexo与Next声明</h2><p>修改<code>主题配置文件</code>如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">powered:</span><br><span class="line">  # Hexo link (Powered by Hexo).</span><br><span class="line">  enable: false</span><br><span class="line">  # Version info of Hexo after Hexo link (vX.X.X).</span><br><span class="line">  version: false</span><br><span class="line"></span><br><span class="line">theme:</span><br><span class="line">  # Theme &amp; scheme info link (Theme - NexT.scheme).</span><br><span class="line">  enable: false</span><br><span class="line">  # Version info of NexT after scheme info (vX.X.X).</span><br><span class="line">  version: false</span><br></pre></td></tr></table></figure></p>
<h2 id="8-打开移动端自适应"><a href="#8-打开移动端自适应" class="headerlink" title="8. 打开移动端自适应"></a>8. 打开移动端自适应</h2><p>修改<code>主题配置文件</code>如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mobile_layout_economy: true</span><br></pre></td></tr></table></figure></p>
<h2 id="9-开启打赏功能"><a href="#9-开启打赏功能" class="headerlink" title="9. 开启打赏功能"></a>9. 开启打赏功能</h2><p>修改<code>主题配置文件</code>如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reward_settings:</span><br><span class="line">  # If true, reward will be displayed in every article by default.</span><br><span class="line">  enable: true</span><br><span class="line">  animation: false</span><br><span class="line">  #comment: Donate comment here.</span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  wechatpay: &lt;your wechatpay reward image link&gt;</span><br><span class="line">  alipay: &lt;your alipay reward image link&gt;</span><br><span class="line">  #bitcoin: &lt;your bitcoin reward image link&gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="二、第三方插件设置"><a href="#二、第三方插件设置" class="headerlink" title="二、第三方插件设置"></a>二、第三方插件设置</h1><h2 id="1-文章字数统计及阅读时长估计"><a href="#1-文章字数统计及阅读时长估计" class="headerlink" title="1. 文章字数统计及阅读时长估计"></a>1. 文章字数统计及阅读时长估计</h2><h3 id="1-插件安装"><a href="#1-插件安装" class="headerlink" title="(1) 插件安装"></a>(1) 插件安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &lt;hexo folder&gt;</span><br><span class="line">npm install hexo-symbols-count-time</span><br></pre></td></tr></table></figure>
<h3 id="2-站点配置文件"><a href="#2-站点配置文件" class="headerlink" title="(2) 站点配置文件"></a>(2) 站点配置文件</h3><p>修改<code>站点配置文件</code>如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br></pre></td></tr></table></figure></p>
<h3 id="3-主题配置文件"><a href="#3-主题配置文件" class="headerlink" title="(3) 主题配置文件"></a>(3) 主题配置文件</h3><p>修改<code>主题配置文件</code>如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_post: true</span><br><span class="line">  item_text_total: false</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br></pre></td></tr></table></figure></p>
<h2 id="2-数学公式支持"><a href="#2-数学公式支持" class="headerlink" title="2. 数学公式支持"></a>2. 数学公式支持</h2><h3 id="1-主题配置文件"><a href="#1-主题配置文件" class="headerlink" title="(1) 主题配置文件"></a>(1) 主题配置文件</h3><p>next主题支持两种数学渲染引擎，<code>mathjax</code>和<code>katex</code>。<br>由于Latex是最常用的数学排版系统，而mathjax集成了Latex，所以这里开启<code>mathjax</code>，配置如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">math:</span><br><span class="line">  mathjax:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure></p>
<h3 id="2-插件安装"><a href="#2-插件安装" class="headerlink" title="(2) 插件安装"></a>(2) 插件安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &lt;hexo folder&gt;</span><br><span class="line">npm un hexo-renderer-marked</span><br><span class="line">npm i hexo-renderer-kramed # or hexo-renderer-pandoc</span><br></pre></td></tr></table></figure>
<h2 id="3-博客评论支持"><a href="#3-博客评论支持" class="headerlink" title="3. 博客评论支持"></a>3. 博客评论支持</h2><p>next支持多种第三方评论插件，此处选择最流行的Disqus。</p>
<h3 id="1-Disqus配置"><a href="#1-Disqus配置" class="headerlink" title="(1) Disqus配置"></a>(1) Disqus配置</h3><p>首先，注册并登陆<span class="exturl" data-url="aHR0cHM6Ly9kaXNxdXMuY29tLw==" title="https://disqus.com/">Disqus<i class="fa fa-external-link"></i></span><br>其次，按照<code>get started -&gt; I want to install Disqus on my site</code>导航，填写必要信息。重点是记住<code>Website Name</code>。计划选择Basic免费版，platform选择”I don’t see my platform listed, install manually with Universal Code”，然后完成设置。</p>
<h3 id="2-主题配置文件"><a href="#2-主题配置文件" class="headerlink" title="(2) 主题配置文件"></a>(2) 主题配置文件</h3><p>在<code>主题配置文件</code>中，打开Disqus<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">comments:</span><br><span class="line">  active: disqus</span><br><span class="line"></span><br><span class="line">disqus:</span><br><span class="line">  enable: true</span><br><span class="line">  shortname: &lt;your Website Name&gt;</span><br><span class="line">  count: true</span><br></pre></td></tr></table></figure></p>
<h2 id="4-网站流量分析"><a href="#4-网站流量分析" class="headerlink" title="4. 网站流量分析"></a>4. 网站流量分析</h2><h3 id="1-谷歌流量分析"><a href="#1-谷歌流量分析" class="headerlink" title="(1) 谷歌流量分析"></a>(1) 谷歌流量分析</h3><p>首先，注册并登陆<span class="exturl" data-url="aHR0cHM6Ly9hbmFseXRpY3MuZ29vZ2xlLmNvbQ==" title="https://analytics.google.com">Google Analysis<i class="fa fa-external-link"></i></span><br>其次，按照<code>侧边栏 -&gt; 设置 -&gt; 媒体资源 -&gt; 跟踪信息 -&gt; 跟踪代码</code>导航，找到并拷贝“跟踪代码”。<br>最后，在<code>主题配置文件</code>中，粘贴跟踪代码。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">google_analytics:</span><br><span class="line">  tracking_id: &lt;your tracking ID&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="2-百度流量分析（国内）"><a href="#2-百度流量分析（国内）" class="headerlink" title="(2) 百度流量分析（国内）"></a>(2) 百度流量分析（国内）</h3><p>首先，注册并登陆<span class="exturl" data-url="aHR0cHM6Ly90b25namkuYmFpZHUuY29tLw==" title="https://tongji.baidu.com/">百度统计<i class="fa fa-external-link"></i></span><br>其次，按照<code>我的报告 -&gt; 管理 -&gt; 代码获取</code>导航，找到新版统计代码获取，其格式一般如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">var _hmt &#x3D; _hmt || [];</span><br><span class="line">(function() &#123;</span><br><span class="line">  var hm &#x3D; document.createElement(&quot;script&quot;);</span><br><span class="line">  hm.src &#x3D; &quot;https:&#x2F;&#x2F;hm.baidu.com&#x2F;hm.js?&lt;your baidu tracking code&gt;&quot;;</span><br><span class="line">  var s &#x3D; document.getElementsByTagName(&quot;script&quot;)[0];</span><br></pre></td></tr></table></figure><br>拷贝<your baidu tracking code>部分，并粘贴到<code>主题配置文件</code>中<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">baidu_analytics: &lt;your baidu tracking code&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="5-搜索功能"><a href="#5-搜索功能" class="headerlink" title="5. 搜索功能"></a>5. 搜索功能</h2><p>Next提供多种搜索功能，这里介绍本地搜索。本地搜索不需要第三方插件，但仍需安装软件包，特点是操作简单但搜索效果一般，不过已经能够满足基本的搜索需求。<br>Next同样提供基于第三方插件的搜索服务，如Algolia搜索和Swiftype搜索，但由于目前版本还不稳定，暂时不多做介绍。</p>
<h3 id="1-安装"><a href="#1-安装" class="headerlink" title="(1) 安装"></a>(1) 安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &lt;hexo folder&gt;</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<h3 id="2-站点配置文件-1"><a href="#2-站点配置文件-1" class="headerlink" title="(2) 站点配置文件"></a>(2) 站点配置文件</h3><p>设置如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># local search</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></p>
<h3 id="3-主题配置文件-1"><a href="#3-主题配置文件-1" class="headerlink" title="(3) 主题配置文件"></a>(3) 主题配置文件</h3><p>设置如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></p>
<h1 id="三、博客内容设置"><a href="#三、博客内容设置" class="headerlink" title="三、博客内容设置"></a>三、博客内容设置</h1><h2 id="1-文章折叠显示"><a href="#1-文章折叠显示" class="headerlink" title="1. 文章折叠显示"></a>1. 文章折叠显示</h2><p>在主页中，所有文章默认全部展开。一般，我们希望文章能够折叠显示，即只显示开头部分，后续部分可点开查看详情。<br>next 7.60版本之前，曾提供<code>auto_excerpt</code>功能，实现自动截断文章形成摘要。然而在7.60版本之后，该功能被移除，官方声明如下<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L2lzc3Vlcy8xMjE3" title="https://github.com/theme-next/hexo-theme-next/issues/1217">next 7.60更新声明<i class="fa fa-external-link"></i></span><br>若希望继续体验<code>auto_excerpt</code>功能，则需使用next 7.60之前版本。<br>在next 7.60版本之后，文章折叠需要再具体每一篇博客中手动设置。具体方法为在文章中段手动添加<code>&lt;!-- more --&gt;</code>。<code>&lt;!-- more --&gt;</code>之前的内容为预览部分，<code>&lt;!-- more --&gt;</code>之后部分会被折叠，需要点开具体文章才可查看详情。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &lt;!-- more --&gt;测试</span><br><span class="line">date: &lt;date&gt;</span><br><span class="line">---</span><br><span class="line">这是在主页中，预览显示的部分。</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">这是在主页中，被折叠的部分。</span><br></pre></td></tr></table></figure></p>
<h1 id="四、SEO"><a href="#四、SEO" class="headerlink" title="四、SEO"></a>四、SEO</h1><h2 id="1-主题配置文件-1"><a href="#1-主题配置文件-1" class="headerlink" title="1. 主题配置文件"></a>1. 主题配置文件</h2><p>在<code>主题配置文件</code>中，打开SEO和exlurl，优化SEO效果。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Change headers hierarchy on site-subtitle (will be main site description) and on all post &#x2F; page titles for better SEO-optimization.</span><br><span class="line">seo: true</span><br><span class="line"># Automatically add external URL with Base64 encrypt &amp; decrypt.</span><br><span class="line">exturl: true</span><br></pre></td></tr></table></figure></p>
<h2 id="2-谷歌SEO配置"><a href="#2-谷歌SEO配置" class="headerlink" title="2. 谷歌SEO配置"></a>2. 谷歌SEO配置</h2><h3 id="1-登录谷歌站点管理工具"><a href="#1-登录谷歌站点管理工具" class="headerlink" title="(1) 登录谷歌站点管理工具"></a>(1) 登录谷歌站点管理工具</h3><p><span class="exturl" data-url="aHR0cHM6Ly9zZWFyY2guZ29vZ2xlLmNvbS9zZWFyY2gtY29uc29sZT9obD16aC1DTiZhbXA7dXRtX3NvdXJjZT13bXgmYW1wO3V0bV9tZWRpdW09ZGVwcmVjYXRpb24tcGFuZSZhbXA7dXRtX2NvbnRlbnQ9aG9tZSZhbXA7cmVzb3VyY2VfaWQ9aHR0cHM6Ly95ZWhhbnNoYXJwLmdpdGh1Yi5pby8=" title="https://search.google.com/search-console?hl=zh-CN&amp;utm_source=wmx&amp;utm_medium=deprecation-pane&amp;utm_content=home&amp;resource_id=https://yehansharp.github.io/">谷歌站点管理工具<i class="fa fa-external-link"></i></span></p>
<h3 id="2-获取google-site-verification-code"><a href="#2-获取google-site-verification-code" class="headerlink" title="(2) 获取google site verification code"></a>(2) 获取google site verification code</h3><p>按照导航输入博客网址，进入Google search console。<br>按照”侧边栏 -&gt; 设置 -&gt; 所有权验证 -&gt; html标记”导航，找到HTML元标记，格式如下所示。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;meta name&#x3D;&quot;google-site-verification&quot; content&#x3D;&quot;&lt;your google site verification code&gt;&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="3-主题配置文件-2"><a href="#3-主题配置文件-2" class="headerlink" title="(3) 主题配置文件"></a>(3) 主题配置文件</h3><p>粘贴google site verification code到<code>主题配置文件</code>中<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Google Webmaster tools verification.</span><br><span class="line"># See: https:&#x2F;&#x2F;www.google.com&#x2F;webmasters</span><br><span class="line">google_site_verification: &lt;your google site verification code&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="3-百度SEO配置"><a href="#3-百度SEO配置" class="headerlink" title="3. 百度SEO配置"></a>3. 百度SEO配置</h2><h3 id="1-登录百度站点管理工具"><a href="#1-登录百度站点管理工具" class="headerlink" title="(1) 登录百度站点管理工具"></a>(1) 登录百度站点管理工具</h3><p><span class="exturl" data-url="aHR0cHM6Ly96aXl1YW4uYmFpZHUuY29tL3NpdGUv" title="https://ziyuan.baidu.com/site/">百度站点管理工具<i class="fa fa-external-link"></i></span></p>
<h3 id="2-获取baidu-site-verification-code"><a href="#2-获取baidu-site-verification-code" class="headerlink" title="(2) 获取baidu site verification code"></a>(2) 获取baidu site verification code</h3><p>按照导航输入博客网址。<br>注意，此处协议头必须选择<code>https</code>而不是<code>http</code>，否则会导致无法验证。<br>验证网站是选择<code>HTML标签验证</code>，得到HTML标签验证，格式如下所示<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;meta name&#x3D;&quot;baidu-site-verification&quot; content&#x3D;&quot;&lt;your baidu site verification code&gt;&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="3-主题配置文件-3"><a href="#3-主题配置文件-3" class="headerlink" title="(3) 主题配置文件"></a>(3) 主题配置文件</h3><p>粘贴google site verification code到<code>主题配置文件</code>中，并开启百度推送<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Baidu Webmaster tools verification.</span><br><span class="line"># See: https:&#x2F;&#x2F;ziyuan.baidu.com&#x2F;site</span><br><span class="line">baidu_site_verification: &lt;your baidu site verification code&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="4-确认搜索引擎收录"><a href="#4-确认搜索引擎收录" class="headerlink" title="4. 确认搜索引擎收录"></a>4. 确认搜索引擎收录</h2><p>在谷歌/百度搜索引擎中，搜索<code>site:&lt;your blog url&gt;</code>,若出现结果，则证明被成功收录。<br>注意，从通过验证，到被成功收录，有一定时间延迟。特别是百度，延迟时间有时长达一个月。所以若站点管理页面显示通过验证，却未能在搜索引擎中查到结果，可过一段时间再尝试。</p>
<h2 id="5-提交站点地图"><a href="#5-提交站点地图" class="headerlink" title="5. 提交站点地图"></a>5. 提交站点地图</h2><p>站点地图是一种文件，您可以通过该文件列出您网站上的网页，从而将您网站内容的组织架构告知Google和其他搜索引擎。<br>通过提交站点地图，可增加SEO效果和搜索引擎收录效率。</p>
<h3 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="(1) 安装插件"></a>(1) 安装插件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &lt;hexo folder&gt;</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>
<h3 id="2-站点配置文件-2"><a href="#2-站点配置文件-2" class="headerlink" title="(2) 站点配置文件"></a>(2) 站点配置文件</h3><p>在站点配置文件中，添加以下内容<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 自动生成sitemap</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br></pre></td></tr></table></figure></p>
<h3 id="3-重新部署博客，生成站点地图"><a href="#3-重新部署博客，生成站点地图" class="headerlink" title="(3) 重新部署博客，生成站点地图"></a>(3) 重新部署博客，生成站点地图</h3><p>部署博客<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &lt;hexo folder&gt;</span><br><span class="line">hexo clean</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><br>查看链接<code>&lt;your blog url&gt;/sitemap.xml</code>和<code>&lt;your blog url&gt;/baidusitemap.xml</code>，验证站点地图生成成功。</p>
<h3 id="4-提交谷歌站点地图"><a href="#4-提交谷歌站点地图" class="headerlink" title="(4) 提交谷歌站点地图"></a>(4) 提交谷歌站点地图</h3><p><span class="exturl" data-url="aHR0cHM6Ly9zZWFyY2guZ29vZ2xlLmNvbS9zZWFyY2gtY29uc29sZT9obD16aC1DTiZhbXA7dXRtX3NvdXJjZT13bXgmYW1wO3V0bV9tZWRpdW09ZGVwcmVjYXRpb24tcGFuZSZhbXA7dXRtX2NvbnRlbnQ9aG9tZSZhbXA7cmVzb3VyY2VfaWQ9aHR0cHM6Ly95ZWhhbnNoYXJwLmdpdGh1Yi5pby8=" title="https://search.google.com/search-console?hl=zh-CN&amp;utm_source=wmx&amp;utm_medium=deprecation-pane&amp;utm_content=home&amp;resource_id=https://yehansharp.github.io/">谷歌站点管理工具<i class="fa fa-external-link"></i></span><br>按照”侧边栏-站点地图”导航，输入站点地图的链接<code>&lt;your blog url&gt;/sitemap.xml</code>，完成谷歌站点地图的提交。</p>
<h3 id="5-提交百度站点地图"><a href="#5-提交百度站点地图" class="headerlink" title="(5) 提交百度站点地图"></a>(5) 提交百度站点地图</h3><p>百度提供多种站点地图提交方式。<br>第一是手动提交。<br>按照”侧边栏 -&gt; 站点地图 -&gt; 手动提交”导航，输入百度站点地图链接<code>&lt;your blog url&gt;/baidusitemap.xml</code>，提交即可。<br>第二是自动提交。此功能已被集成到next主题中，可以很方便地开启。<br>首先在next<code>主题配置文件</code>中，开启百度主动推送<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO.</span><br><span class="line">baidu_push: true</span><br></pre></td></tr></table></figure><br>按照”侧边栏-站点地图-自动提交-自动推送”导航，复制”自动推送工具代码”。将其复制到<code>&lt;hexo folder&gt;\themes\next\layout\_third-party\baidu-push.swig</code>中，具体格式如下所示<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.baidu_push %&#125;</span><br><span class="line">  &lt;your 自动推送工具代码&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>项目实践</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客系列（一）：使用Hexo配合Github进行静态博客搭建</title>
    <url>/2019/12/28/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E4%BD%BF%E7%94%A8Hexo%E9%85%8D%E5%90%88Github%E8%BF%9B%E8%A1%8C%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h1><h2 id="1-官网教程"><a href="#1-官网教程" class="headerlink" title="1.官网教程"></a>1.官网教程</h2><p>前置准备：<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvaW5kZXguaHRtbCMlRTUlQUUlODklRTglQTMlODUtSGV4bw==" title="https://hexo.io/zh-cn/docs/index.html#%E5%AE%89%E8%A3%85-Hexo">hexo官网安装文档<i class="fa fa-external-link"></i></span><br><a id="more"></a></p>
<h2 id="2-node-js安装"><a href="#2-node-js安装" class="headerlink" title="2.node.js安装"></a>2.node.js安装</h2><h3 id="1-程序安装"><a href="#1-程序安装" class="headerlink" title="(1) 程序安装"></a>(1) 程序安装</h3><p><span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkLw==" title="https://nodejs.org/en/download/">Node.js<i class="fa fa-external-link"></i></span></p>
<h3 id="2-代码安装"><a href="#2-代码安装" class="headerlink" title="(2)代码安装"></a>(2)代码安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install node</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>
<h2 id="3-git安装"><a href="#3-git安装" class="headerlink" title="3.git安装"></a>3.git安装</h2><h3 id="1-程序安装-1"><a href="#1-程序安装-1" class="headerlink" title="(1) 程序安装"></a>(1) 程序安装</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZC93aW4=" title="https://git-scm.com/download/win">git_windows<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvZ2l0LW9zeC1pbnN0YWxsZXIv" title="https://sourceforge.net/projects/git-osx-installer/">git_mac<i class="fa fa-external-link"></i></span></p>
<h3 id="2-代码安装-1"><a href="#2-代码安装-1" class="headerlink" title="(2)代码安装"></a>(2)代码安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install git</span><br><span class="line">git</span><br></pre></td></tr></table></figure>
<h1 id="二、hexo安装"><a href="#二、hexo安装" class="headerlink" title="二、hexo安装"></a>二、hexo安装</h1><h2 id="1-官网教程-1"><a href="#1-官网教程-1" class="headerlink" title="1.官网教程"></a>1.官网教程</h2><p><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvaW5kZXguaHRtbCMlRTUlQUUlODklRTglQTMlODUtSGV4bw==" title="https://hexo.io/zh-cn/docs/index.html#%E5%AE%89%E8%A3%85-Hexo">hexo官网安装文档<i class="fa fa-external-link"></i></span></p>
<h2 id="2-代码安装-2"><a href="#2-代码安装-2" class="headerlink" title="2. 代码安装"></a>2. 代码安装</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &lt;path&gt;                              #跳转至目录</span><br><span class="line">npm install -g hexo-cli                #安装hexo</span><br><span class="line">hexo init &lt;folder&gt;                     #初始化文件夹</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install                            #安装依赖包</span><br><span class="line">npm install hexo-deployer-git --save   #安装拓展</span><br></pre></td></tr></table></figure>
<p>在windows平台，若使用PowerShell运行安装代码，可能会出现以下错误。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo : 无法加载文件 C:\Users\yehan\AppData\Roaming\npm\hexo.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https :&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?LinkID&#x3D;135170 中的 about_Execution_Policies。</span><br></pre></td></tr></table></figure><br>原因是PowerShell默认禁止在系统上运行脚本，需要首先使用管理员权限运行PowerShell，然后输入以下代码进行修改：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set-ExecutionPolicy RemoteSigned   #选择Y</span><br></pre></td></tr></table></figure></p>
<h1 id="三、hexo配置"><a href="#三、hexo配置" class="headerlink" title="三、hexo配置"></a>三、hexo配置</h1><h2 id="1-Github同步配置"><a href="#1-Github同步配置" class="headerlink" title="1. Github同步配置"></a>1. Github同步配置</h2><h3 id="1-建立GitHub账号，建立名为-github-io的New-Respository"><a href="#1-建立GitHub账号，建立名为-github-io的New-Respository" class="headerlink" title="(1) 建立GitHub账号，建立名为.github.io的New Respository"></a>(1) 建立GitHub账号，建立名为<GitHub用户名>.github.io的New Respository</h3><h3 id="2-本地安装git，并配置user-name和user-email"><a href="#2-本地安装git，并配置user-name和user-email" class="headerlink" title="(2) 本地安装git，并配置user.name和user.email"></a>(2) 本地安装git，并配置user.name和user.email</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &lt;GitHub用户名&gt;</span><br><span class="line">git config --global user.email &lt;GitHub注册邮箱&gt;</span><br></pre></td></tr></table></figure>
<h3 id="3-生成ssh密钥文件"><a href="#3-生成ssh密钥文件" class="headerlink" title="(3) 生成ssh密钥文件"></a>(3) 生成ssh密钥文件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &lt;GitHub注册邮箱&gt;</span><br></pre></td></tr></table></figure>
<p>此步生成两个文件。<code>id_rsa</code>为私钥文件。<code>id_rsa.pub</code>为公钥文件。</p>
<h3 id="4-查看并复制公钥文件"><a href="#4-查看并复制公钥文件" class="headerlink" title="(4) 查看并复制公钥文件"></a>(4) 查看并复制公钥文件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &lt;keygen folder&gt;</span><br><span class="line">vim id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>复制公钥文件中的所有内容。</p>
<h3 id="5-将公钥内容上传至Github设置中，实现Github与Hexo同步"><a href="#5-将公钥内容上传至Github设置中，实现Github与Hexo同步" class="headerlink" title="(5) 将公钥内容上传至Github设置中，实现Github与Hexo同步"></a>(5) 将公钥内容上传至Github设置中，实现Github与Hexo同步</h3><p>打开<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL2tleXM=" title="https://github.com/settings/keys">GitHub_Settings_keys<i class="fa fa-external-link"></i></span>界面，新建<code>new SSH key</code>.<br>标题随意，如<code>hexo keygen</code>。<br>key文本框内，将复制的公钥内容粘贴进去。<br>以上过程为设置公钥，以保障github识别推送的用户为合法用户，实现Github与Hexo同步。</p>
<h2 id="2-Hexo部署配置"><a href="#2-Hexo部署配置" class="headerlink" title="2. Hexo部署配置"></a>2. Hexo部署配置</h2><p>配置文件位于<folder>下的_config.yml文件，修改以下内容<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: &lt;name&gt;&#39;s blog</span><br><span class="line">keywords: &lt;name&gt;, blog</span><br><span class="line">author: &lt;name&gt;</span><br><span class="line">language: zh-Hans               </span><br><span class="line"># language: zh-CN          # 注意，若要使用next主题，则设置为zh-CN。next官方的简体中文代码为zh-CN而不是zh-Hans</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repo: git@github.com:&lt;your github username&gt;&#x2F;&lt;your github username&gt;.github.io.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure></p>
<h2 id="3-主题配置"><a href="#3-主题配置" class="headerlink" title="3. 主题配置"></a>3. 主题配置</h2><p>选择next作为博客主题</p>
<h3 id="1-官方教程"><a href="#1-官方教程" class="headerlink" title="(1) 官方教程"></a>(1) 官方教程</h3><p>[next使用文档]（<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lmlpc3NuYW4uY29tL++8iQ==" title="https://theme-next.iissnan.com/）">https://theme-next.iissnan.com/）<i class="fa fa-external-link"></i></span></p>
<h3 id="2-next主题下载"><a href="#2-next主题下载" class="headerlink" title="(2) next主题下载"></a>(2) next主题下载</h3><p>next下载<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &lt;folder&gt;</span><br><span class="line">mkdir themes&#x2F;next</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure><br>注意，next的github仓库经历过迁移。</p>
<ul>
<li>旧版仓库地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lpc3NuYW4vaGV4by10aGVtZS1uZXh0IHRoZW1lcy9uZXh0" title="https://github.com/iissnan/hexo-theme-next themes/next">https://github.com/iissnan/hexo-theme-next themes/next<i class="fa fa-external-link"></i></span></li>
<li>新版仓库地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0" title="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next themes/next<i class="fa fa-external-link"></i></span></li>
</ul>
<p>旧版仓库存储的是next的旧版本，有很多bug，不再支持。请勿下载错误。</p>
<h3 id="3-next启用"><a href="#3-next启用" class="headerlink" title="(3) next启用"></a>(3) next启用</h3><p>配置文件位于<folder>下的_config.yml文件，修改以下内容<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></p>
<h1 id="四、hexo部署"><a href="#四、hexo部署" class="headerlink" title="四、hexo部署"></a>四、hexo部署</h1><h2 id="1-单独部署命令"><a href="#1-单独部署命令" class="headerlink" title="1. 单独部署命令"></a>1. 单独部署命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean                  #清空静态文件</span><br><span class="line">hexo generate               #(hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</span><br><span class="line">hexo server                 #(hexo s) 启动本地web服务，用于博客的预览</span><br><span class="line">hexo deploy                 #(hexo d) 部署博客到服务器（比如github, heroku等平台）</span><br></pre></td></tr></table></figure>
<h2 id="2-组合部署命令"><a href="#2-组合部署命令" class="headerlink" title="2.组合部署命令"></a>2.组合部署命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d -g                  #生成服务器部署</span><br><span class="line">hexo s -g                  #生成本地预览</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>项目实践</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>starting over is harder than starting up</title>
    <url>/2019/12/27/starting%20over%20is%20harder%20than%20starting%20up/</url>
    <content><![CDATA[<p>2019年7月13日，放在办公室的笔记本电脑被人偷走，损失惨重。也让我对学校的安保深深失望。<br>不仅仅是价值一万八的Mac Pro没了，更重要的是电脑里面的所有资料也都找不回了，包括博客的源文件，统计学的学习总结，以及马上要进行的考试资料。<br><a id="more"></a><br><br><br>为此消沉了良久，后续也一直很忙，紧接着就是考试，以及新学期的紧张学习，博客的事情也就一直放着没管。<br>如今过了半年，心绪稍平，紧张的学期也暂时结束，才终于可以腾出手来解决博客的事情。<br><br><br>由于所有博客的源文件都丢失了，这意味着要重新开始。<br>此外，由于换了新的笔记本，从Mac系统迁移到了Windos系统，全部环境也需要重新配置一遍。<br>那就重新开始吧，Here we go agin.</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
</search>
